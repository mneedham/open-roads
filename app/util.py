import math
import matplotlib

matplotlib.use("Agg")
import matplotlib.pyplot as plt
import base64

from io import BytesIO
import numpy as np


def generate_points(lat, lon, radius, number_of_points=10):
    circle_points = []
    for k in range(number_of_points):
        angle = math.pi * 2 * k / number_of_points
        dx = radius * math.cos(angle)
        dy = radius * math.sin(angle)
        point = {'lat': lat + (180 / math.pi) * (dy / 6378137),
                 'lon': lon + (180 / math.pi) * (dx / 6378137) / math.cos(lat * math.pi / 180)}
        circle_points.append(point)
    return circle_points


def sparkline(data, figsize=(4, 0.25), **kwags):
    """
    Returns a HTML image tag containing a base64 encoded sparkline style plot
    """
    # data = list(data)

    fig, ax = plt.subplots(1, 1, figsize=figsize, **kwags)
    ax.plot(data)
    for k, v in ax.spines.items():
        v.set_visible(False)
    ax.set_xticks([])
    ax.set_yticks([])

    # plt.plot(len(data) - 1, data[len(data) - 1], 'r.')

    # ax.fill_between(range(len(data)), data, len(data) * [min(data)], alpha=0.1)

    img = BytesIO()
    plt.savefig(img, transparent=True, bbox_inches='tight')
    img.seek(0)
    plt.close()

    return base64.b64encode(img.read()).decode("UTF-8")


if __name__ == "__main__":
    # drawing = sparkline([1, 2, 3, 4,3,6,2])
    data = np.array([
        [51.357397146246264, -0.20153965352074504],
        [51.357874010145395, -0.198045110923591],
        [51.35827851096218, -0.19511350481186507],
        [51.358487396611125, -0.19349660642888197],
        [51.359317386178525, -0.1913381477045912],
        [51.360395283716876, -0.19184151631900165],
        [51.3604469910654, -0.1916958410518522],
        [51.36126248599053, -0.19209464820769506],
        [51.36204180929129, -0.19248052875784963],
        [51.36269486763575, -0.19284266275743495],
        [51.36485897106494, -0.19380614081538422],
        [51.36596271332772, -0.1942367800355052],
        [51.366198372201936, -0.19435680147198292],
        [51.367644953531304, -0.19486018011070053],
        [51.367771708964405, -0.1937489987402294],
        [51.367929936434045, -0.1935129127658143],
        [51.369228962830285, -0.1937778549890753],
        [51.37072296057608, -0.1932736826141529],
        [51.370388271548514, -0.19081573036828614],
        [51.37032170696625, -0.18999943526729454],
        [51.37092773207757, -0.1896450914155837],
        [51.371747450627666, -0.18915300042046385],
        [51.37222854042601, -0.18886103457910888],
        [51.372708301137365, -0.1896466959527183],
        [51.37299378091031, -0.1900808379226703],
        [51.37331787007802, -0.1883582723705376],
        [51.37331787007802, -0.1883582723705376],
        [51.3737052061637, -0.18840045465121405],
        [51.37430867813184, -0.1884628423708575],
        [51.37455377371615, -0.18861121914644105],
        [51.376509206337104, -0.18945364499589915],
        [51.376588269761484, -0.1928272308964826],
        [51.37793147261051, -0.19245820535044575],
        [51.37834313952018, -0.1888352421299002],
        [51.38007864326535, -0.19174133793727208],
        [51.38284958690552, -0.19065490365101598],
        [51.38294800205948, -0.19062228047367802],
        [51.383716017549915, -0.19027582417095185],
        [51.38395844888248, -0.19025188961338277],
        [51.38407095304053, -0.19054924894265082],
        [51.38151324214747, -0.19555046195774178],
        [51.381198991611846, -0.1961663775995735],
        [51.381067942365064, -0.19641582580292824],
        [51.37960050652881, -0.19923252653921747],
        [51.37952182886365, -0.1993793129500638],
        [51.379373460171635, -0.199672531642756],
        [51.378762223939006, -0.20086045325729257],
        [51.378438736955104, -0.20146228719394985],
        [51.37723718885927, -0.20286008048948442],
        [51.37620325953662, -0.20346095544398962],
        [51.37670291443392, -0.2049645052504995],
        [51.37707428243432, -0.20572590902175356],
        [51.37668917816094, -0.20641630806104472],
        [51.37545910235555, -0.20889267349014154],
        [51.374694511681206, -0.20829030761946474],
        [51.37355798357472, -0.20982894768536706],
        [51.37246416074825, -0.2094549509681338],
        [51.372364642446406, -0.20941573065001903],
        [51.372070923408664, -0.21020303523253608],
        [51.37199245082248, -0.21036413769756207],
        [51.37187057684313, -0.21062750390525586],
        [51.37153388591105, -0.2115457726868068],
        [51.37144971157007, -0.2119226027745595],
        [51.37184756245161, -0.2120651450366707],
        [51.371901924395544, -0.21209176226224996],
        [51.371901924395544, -0.21209176226224996],
        [51.37207355923008, -0.21214254627997958],
        [51.37235369875363, -0.21223220685697158],
        [51.37251634624403, -0.21228334192643794],
        [51.372787717471766, -0.2123877134140584],
        [51.37291441577002, -0.21244024964796382],
        [51.373190825166226, -0.2128748874043728],
        [51.37325921152159, -0.2132314214250555],
        [51.373348417571684, -0.2137739288671802],
        [51.37308931868512, -0.21388458769348662],
        [51.37277629593969, -0.21399734364717687],
        [51.37264214329174, -0.21404566714095352],
        [51.37242776165817, -0.21414021504263606],
        [51.37220395490406, -0.21420639365953734],
        [51.372398560001145, -0.21576489068528862],
        [51.372499775382934, -0.21709714589022103],
        [51.37224856788712, -0.21713563943099035],
        [51.371818488259926, -0.21723855026764052],
        [51.371638356837906, -0.21603868836915646],
        [51.37118022314113, -0.21607086221554503],
        [51.37091849819365, -0.21600919888273978],
        [51.37096498701601, -0.2155189086953077],
        [51.37049524162475, -0.21537913442683077],
        [51.3693784431225, -0.21408645597807718],
        [51.36689552694302, -0.2146140300277883],
        [51.36618157475009, -0.21497220713007573],
        [51.36498648199142, -0.21503304067508686],
        [51.364867021931296, -0.21486530241471138],
        [51.36486177100146, -0.2145207407041462],
        [51.36478088527063, -0.21452388649624296],
        [51.36379271939131, -0.2145910466877221],
        [51.362295793936156, -0.2143188757381898],
        [51.36046195986102, -0.21377254837749368],
        [51.35874233056574, -0.21304945892558294],
        [51.358733124287674, -0.2130354538619048],
        [51.35737166827651, -0.21221229664602562],
        [51.3572631634164, -0.21217343230332245],
        [51.357276957637104, -0.20895561052715128],
        [51.35753250940947, -0.20743753222731956],
        [51.35778081273785, -0.2060346242525196],
        [51.35792084331031, -0.20519609453996743],
        [51.35670665094984, -0.20459722818119733],
        [51.356822350737524, -0.2039320183219509],
        [51.35693936766851, -0.20335293022421516],
        [51.357397146246264, -0.20153965352074504]
    ])
    drawing = sparkline(data)
    print("<div><img src=\"data:image/png;base64,{0}\"/></div>".format(drawing))
